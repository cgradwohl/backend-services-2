Resources:
  MadKuduBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: VantaOwner
          Value: ${self:custom.vanta.owner}
        - Key: VantaNonProd
          Value: ${self:custom.vanta.nonProd}
        - Key: VantaDescription
          Value: "File storage for mad kudu."
        - Key: VantaContainsUserData
          Value: true
      VersioningConfiguration:
        Status: Enabled

  MadKuduRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - s3.amazonaws.com

  MadKuduPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - "s3:ListBucket"
            Effect: Allow
            Resource:
              - !Join
                - ""
                - - "arn:aws:s3:::"
                  - !Ref MadKuduBucket
          - Action:
              - "s3:GetObject"
              - "s3:PutObject"
              - "s3:DeleteObject"
            Effect: Allow
            Resource:
              - !Join
                - ""
                - - "arn:aws:s3:::"
                  - !Ref MadKuduBucket
                  - /*
      PolicyName: MadKuduPolicy
      Roles:
        - !Ref MadKuduRole
