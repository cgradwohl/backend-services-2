Resources:
  MessagesV3FirehoseBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      ReplicationConfiguration:
        Role: !GetAtt
          - MessagesV3FirehoseRole
          - Arn
        Rules:
          - Destination:
              Bucket: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref MessagesV3FirehoseReplicationBucket
              StorageClass: STANDARD
            Id: Backup
            Prefix: ''
            Status: Enabled
      Tags:
      - Key: VantaOwner
        Value: ${self:custom.vanta.owner}
      - Key: VantaNonProd
        Value: ${self:custom.vanta.nonProd}
      - Key: VantaDescription
        Value: "Data store destination for MessagesV3 firehose"
      - Key: VantaContainsUserData
        Value: true
      VersioningConfiguration:
        Status: Enabled

  MessagesV3FirehoseReplicationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - ${self:custom.lifecyclePolicyRules.deleteAfter7Days}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: VantaOwner
          Value: ${self:custom.vanta.owner}
        - Key: VantaNonProd
          Value: ${self:custom.vanta.nonProd}
        - Key: VantaDescription
          Value: "Replication bucket for MessagesV3 firehose used by snowflake/fivetran."
        - Key: VantaContainsUserData
          Value: true
      VersioningConfiguration:
        Status: Enabled

  MessagesV3FirehoseRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
                - s3.amazonaws.com

  MessagesV3FirehoseStoragePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:AbortMultipartUpload
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:PutObject
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref MessagesV3FirehoseBucket
                  - /*
          - Action:
              - 's3:GetReplicationConfiguration'
              - 's3:ListBucket'
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref MessagesV3FirehoseBucket
          - Action:
              - 's3:GetObjectVersion'
              - 's3:GetObjectVersionAcl'
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref MessagesV3FirehoseBucket
                  - /*
          - Action:
              - 's3:ReplicateObject'
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref MessagesV3FirehoseReplicationBucket
                  - /*
          - Action:
              - kms:Decrypt
            Effect: "Allow"
            Resource:
              - Fn::GetAtt: [AutoRotatedKmsKey, Arn]
          - Action:
            - kinesis:Get*
            - kinesis:DescribeStream
            Effect: "Allow"
            Resource:
              - Fn::GetAtt: [MessagesV3KinesisStream, Arn]        
      PolicyName: MessagesV3FirehoseStoragePolicy
      Roles:
        - !Ref MessagesV3FirehoseRole

  MessagesV3Firehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    DependsOn: MessagesV3FirehoseStoragePolicy
    Properties:
      DeliveryStreamType: KinesisStreamAsSource
      KinesisStreamSourceConfiguration:
        KinesisStreamARN: !GetAtt MessagesV3KinesisStream.Arn
        RoleARN: !GetAtt MessagesV3FirehoseRole.Arn
      S3DestinationConfiguration:
        BucketARN: !GetAtt MessagesV3FirehoseBucket.Arn
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 10
        CompressionFormat: UNCOMPRESSED
        RoleARN: !GetAtt MessagesV3FirehoseRole.Arn
